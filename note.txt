- Khi this được khai báo trong hàm function bình thường thì nó có this riêng. Còn khi khai báo với arrow function thì không có this riêng => Không nên dùng để định nghĩa method trong object.

- Callback là một hàm được truyền như tham số cho hàm khác và sẽ được gọi lại sau khi một hành đồng nào nó xảy ra. Hàm này sẽ được gọi laiij sau này, không phải lúc truyền.

- Promise là một đối tượng đại diện cho kết quả tương lại của một hành động bất đồng bộ. Nó có 3 trạng thái pending, fulfilles, reject.

- async/await: async là một từ khóa dùng để đánh giấu một hàm là hàm bất đồng bộ. Hàm bất đồng bộ luôn trả về một Promise, và giá trị trả về từ hàm này sẽ tự động được bọc trong một Promise. await chỉ có thể sử dụng trong hàm async. Nó giúp ta chờ đợi kết quả của một hàm Promise, và sau khi Promise hoàn thành, giá trị của Promise sẽ được trả về trực tiếp ko phải là một Promise nữa. Tính ưu viểt của async/await: dễ đọc, dễ hiểu; tránh callback hell do không phả lồng nhiều .then như khi sử dụng Promise thuần; quản lý dễ dang với try/catch để bắt lỗi.

- ES6 Modules (import/export): tại sao cần module? Khi dự án lớn lên chúng ta cần tách code thành nhiều file để dễ bảo trì, tái sử dụng code ở nhiều nơi, tránh biến toàn cục bị trùng lặp. Lưu ý một file chỉ dùng được một export default, khi đã có default thì có thể đặt tên tùy ý khi import. Lưu ý khi dùng module thì phải dùng type="module" trong thể script của file html.

- Destructuring cho phép rút gọn việc lấy giá trị từ object hoặc array vào biến. 

- Rest/Spread syntax: Spread(...) - trải mẳng hoặc object ra. Rest(...) - gom phần còn lại.

- Optional Chaining(?.): giúp truy cập các thuộc tính trong object hoặc gọi các phương thức mà không lo lỗi khi đối tượng không tồn tại(ví dụ là null hoặc undefined).

- Nullish Coalescing(??): trả về giá trị đầu tiên nếu nó không phải null hoặc undefined. Nếu giá trị đầu tiên nulll hoặc undefined thì nó sẽ trả về giá trị thứ 2. Nullish colescing(??) chỉ kiểm tra null và undefined, còn phép hoặc(||) kiểm tra giá trị đầu tiên là falsy(false, 0, NaN, ", null, undefined) thì nó sẽ lấy giá trị thứ 2.